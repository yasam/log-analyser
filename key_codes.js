var KEY_CODES = new Object();

KEY_CODES.USER_INPUT_KEY_STANDBY = 0xE000 ;
KEY_CODES.USER_INPUT_KEY_SELECT = 0xE001 ;
KEY_CODES.USER_INPUT_KEY_BACK = 0xE002 ;
KEY_CODES.USER_INPUT_KEY_VOLUME_UP = 0xE003 ;
KEY_CODES.USER_INPUT_KEY_VOLUME_DOWN = 0xE004 ;
KEY_CODES.USER_INPUT_KEY_MUTE = 0xE005 ;
KEY_CODES.USER_INPUT_KEY_CHANNEL_UP = 0xE006 ;
KEY_CODES.USER_INPUT_KEY_CHANNEL_DOWN = 0xE007 ;
KEY_CODES.USER_INPUT_KEY_INTERACTIVE = 0xE008 ;
KEY_CODES.USER_INPUT_KEY_HELP = 0xE009 ;
KEY_CODES.USER_INPUT_KEY_SERVICES = 0xE00A ;
KEY_CODES.USER_INPUT_KEY_GUIDE = 0xE00B ;
KEY_CODES.USER_INPUT_KEY_MOSAIC = 0xE00C ;
KEY_CODES.USER_INPUT_KEY_CANCEL = 0xE00D ;
KEY_CODES.USER_INPUT_KEY_INFO = 0xE00E ;
KEY_CODES.USER_INPUT_KEY_TEXT = 0xE00F ;
KEY_CODES.USER_INPUT_KEY_TV = 0xE010 ;
KEY_CODES.USER_INPUT_KEY_RCH_UNPROGRAMMED = 0xE011 ;
KEY_CODES.USER_INPUT_KEY_REMOTE_BATTERY_LOW = 0xE012 ;

KEY_CODES.USER_INPUT_KEY_UP = 0xE100 ;
KEY_CODES.USER_INPUT_KEY_DOWN = 0xE101 ;
KEY_CODES.USER_INPUT_KEY_LEFT = 0xE102 ;
KEY_CODES.USER_INPUT_KEY_RIGHT = 0xE103 ;
KEY_CODES.USER_INPUT_KEY_RED = 0xE200 ;
KEY_CODES.USER_INPUT_KEY_GREEN = 0xE201 ;
KEY_CODES.USER_INPUT_KEY_YELLOW = 0xE202 ;
KEY_CODES.USER_INPUT_KEY_BLUE = 0xE203 ;

KEY_CODES.USER_INPUT_KEY_NUMERIC_ZERO = 0xE300 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_ONE = 0xE301 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_TWO = 0xE302 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_THREE = 0xE303 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_FOUR = 0xE304 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_FIVE = 0xE305 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_SIX = 0xE306 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_SEVEN = 0xE307 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_EIGHT = 0xE308 ;
KEY_CODES.USER_INPUT_KEY_NUMERIC_NINE = 0xE309 ;

KEY_CODES.USER_INPUT_KEY_PLAY = 0xE400 ;
KEY_CODES.USER_INPUT_KEY_PAUSE = 0xE401 ;
KEY_CODES.USER_INPUT_KEY_STOP = 0xE402 ;
KEY_CODES.USER_INPUT_KEY_RECORD = 0xE403 ;
KEY_CODES.USER_INPUT_KEY_FORWARD = 0xE404 ;
KEY_CODES.USER_INPUT_KEY_FAST_FORWARD = 0xE405 ;
KEY_CODES.USER_INPUT_KEY_REVERSE = 0xE406 ;
KEY_CODES.USER_INPUT_KEY_FAST_REVERSE = 0xE407 ;
KEY_CODES.USER_INPUT_KEY_STEP_FORWARD = 0xE408 ;
KEY_CODES.USER_INPUT_KEY_STEP_BACKWARD = 0xE409 ;

// below is defined by ICD
KEY_CODES.USER_INPUT_KEY_ACTIVE = 0xE500 ;
KEY_CODES.USER_INPUT_KEY_LIST = 0xE501 ;
KEY_CODES.USER_INPUT_KEY_EXIT = 0xE502 ;
KEY_CODES.USER_INPUT_KEY_MENU = 0xE503 ;
KEY_CODES.USER_INPUT_KEY_PREVIOUS_CHAN = 0xE504 ;
KEY_CODES.USER_INPUT_KEY_ENTER = 0xE505 ;
KEY_CODES.USER_INPUT_KEY_DASH = 0xE506 ;
KEY_CODES.USER_INPUT_KEY_TV_ON = 0xE507 ;
KEY_CODES.USER_INPUT_KEY_TV_OFF = 0xE508 ;

KEY_CODES.USER_INPUT_KEY_AV1_SAT_ONLY = 0xE600 ;
KEY_CODES.USER_INPUT_KEY_AV1_UNI_ONLY = 0xE601 ;
KEY_CODES.USER_INPUT_KEY_AV2_SAT_ONLY = 0xE602 ;
KEY_CODES.USER_INPUT_KEY_AV2_UNI_ONLY = 0xE603 ;
KEY_CODES.USER_INPUT_KEY_LOW_BATTERY = 0xE604 ;
KEY_CODES.USER_INPUT_KEY_SAT_TV_NOT_PROGRAMMED = 0xE605 ;
KEY_CODES.USER_INPUT_KEY_TV_SAT_ONLY_KEY = 0xE606 ;
KEY_CODES.USER_INPUT_KEY_TV_UNI_ONLY_KEY = 0xE607 ;
KEY_CODES.USER_INPUT_KEY_TVAV_TV_NOT_PROGRAMMED = 0xE608 ;
KEY_CODES.USER_INPUT_KEY_TVAV_UNI_ONLY_KEY = 0xE609 ;
KEY_CODES.USER_INPUT_KEY_FORMAT = 0xE60A ;
KEY_CODES.USER_INPUT_KEY_LOW_BATTERY_FOR_XMP2 = 0xE60B;
KEY_CODES.USER_INPUT_KEY_SIMPLE_PAIRING_FOR_RF4CE = 0xE60C;

/* Codes for UEI 'b' codes -- COPIED FROM dssuserinput.h -- */
KEY_CODES.USER_INPUT_KEY_REPEAT_GUIDE =        (0xE520);
KEY_CODES.USER_INPUT_KEY_REPEAT_INFO =         (0xE521);
KEY_CODES.USER_INPUT_KEY_REPEAT_LIST =         (0xE522);
KEY_CODES.USER_INPUT_KEY_REPEAT_RED =          (0xE523);
KEY_CODES.USER_INPUT_KEY_REPEAT_GREEN =        (0xE524);
KEY_CODES.USER_INPUT_KEY_REPEAT_YELLOW =       (0xE525);
KEY_CODES.USER_INPUT_KEY_REPEAT_BLUE =         (0xE526);
KEY_CODES.USER_INPUT_KEY_REPEAT_PLAY =         (0xE527);
KEY_CODES.USER_INPUT_KEY_REPEAT_PAUSE =        (0xE528);
KEY_CODES.USER_INPUT_KEY_REPEAT_RECORD =       (0xE529);
KEY_CODES.USER_INPUT_KEY_REPEAT_FAST_FORWARD = (0xE52A);
KEY_CODES.USER_INPUT_KEY_REPEAT_REVERSE =      (0xE52B);
KEY_CODES.USER_INPUT_KEY_REPEAT_STEP_FORWARD = (0xE52C);
KEY_CODES.USER_INPUT_KEY_REPEAT_STEP_BACKWARD =(0xE52D);


function findKeyCode(key){
	var val = parseInt(key,16);
	
	if(val >= 0x1E000)
		val -= 0x10000;
	//alert(val);
	for (field in KEY_CODES){
		if(KEY_CODES[field] === val)
			return field;
	}
	return "";
}

function replaceKeyCode(){
	$('#logtable').find('tbody').find('tr:visible').each(function(){
		$(this).find('#log').each(function(){
			var s = $(this).text();
			var idx;

			idx = s.indexOf("rawkey=");
			if( idx >= 0){
				var t = s.substr(idx+7, 5);
				var k = findKeyCode(t);
				if(k === "")
					return;

				if(s.indexOf(k) >= 0)
					return;

				var action = "RELEASED ";

				if(s.substr(idx+7,1) == "1")
					action = "PRESSED ";

				//alert(k);
				s += k+" : "+action;
				$(this).html(s);
			}
		});
	});
}